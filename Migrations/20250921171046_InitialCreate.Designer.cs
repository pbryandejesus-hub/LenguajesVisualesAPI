// <auto-generated />
using System;
using LenguajesVisualesAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LenguajesVisualesAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250921171046_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LenguajesVisualesAPI.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Descripcion = "Productos electrónicos",
                            Nombre = "Electrónica"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Descripcion = "Prendas de vestir",
                            Nombre = "Ropa"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            Descripcion = "Comestibles y bebidas",
                            Nombre = "Alimentos"
                        });
                });

            modelBuilder.Entity("LenguajesVisualesAPI.Models.DetallePedido", b =>
                {
                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PedidoId", "ProductoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("DetallesPedido");

                    b.HasData(
                        new
                        {
                            PedidoId = 1,
                            ProductoId = 1,
                            Cantidad = 1,
                            PrecioUnitario = 899.99m
                        },
                        new
                        {
                            PedidoId = 1,
                            ProductoId = 3,
                            Cantidad = 2,
                            PrecioUnitario = 29.99m
                        },
                        new
                        {
                            PedidoId = 2,
                            ProductoId = 2,
                            Cantidad = 1,
                            PrecioUnitario = 599.99m
                        },
                        new
                        {
                            PedidoId = 2,
                            ProductoId = 4,
                            Cantidad = 3,
                            PrecioUnitario = 4.99m
                        });
                });

            modelBuilder.Entity("LenguajesVisualesAPI.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Pedidos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Fecha = new DateTime(2025, 9, 21, 14, 10, 45, 943, DateTimeKind.Local).AddTicks(9844),
                            Total = 0m,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            Fecha = new DateTime(2025, 9, 21, 14, 10, 45, 947, DateTimeKind.Local).AddTicks(2808),
                            Total = 0m,
                            UsuarioId = 2
                        });
                });

            modelBuilder.Entity("LenguajesVisualesAPI.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            CategoriaId = 1,
                            Descripcion = "Laptop HP 8GB RAM",
                            Nombre = "Laptop HP",
                            Precio = 899.99m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            CategoriaId = 1,
                            Descripcion = "Smartphone 128GB",
                            Nombre = "Smartphone Samsung",
                            Precio = 599.99m,
                            Stock = 15
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            CategoriaId = 2,
                            Descripcion = "Camisa de algodón",
                            Nombre = "Camisa Polo",
                            Precio = 29.99m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            CategoriaId = 3,
                            Descripcion = "Paquete de galletas",
                            Nombre = "Galletas Choco",
                            Precio = 4.99m,
                            Stock = 50
                        });
                });

            modelBuilder.Entity("LenguajesVisualesAPI.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "bryan@ejemplo.com",
                            Nombre = "Bryan",
                            PasswordHash = "$2a$11$O1rwjfPzK6hZWng/jNCYK./Vn.i2iv2qmrzQJZgEXdWBStUfXuyeG",
                            Rol = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "ana@ejemplo.com",
                            Nombre = "Ana",
                            PasswordHash = "$2a$11$CpJsR29uTHhpOxIcAt4SI.amiK7x/Knk5RdsITl69RSWEYNWKz7ea",
                            Rol = "User"
                        });
                });

            modelBuilder.Entity("LenguajesVisualesAPI.Models.DetallePedido", b =>
                {
                    b.HasOne("LenguajesVisualesAPI.Models.Pedido", "Pedido")
                        .WithMany("DetallesPedido")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LenguajesVisualesAPI.Models.Producto", "Producto")
                        .WithMany("DetallesPedido")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("LenguajesVisualesAPI.Models.Pedido", b =>
                {
                    b.HasOne("LenguajesVisualesAPI.Models.Usuario", "Usuario")
                        .WithMany("Pedidos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LenguajesVisualesAPI.Models.Producto", b =>
                {
                    b.HasOne("LenguajesVisualesAPI.Models.Categoria", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("LenguajesVisualesAPI.Models.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("LenguajesVisualesAPI.Models.Pedido", b =>
                {
                    b.Navigation("DetallesPedido");
                });

            modelBuilder.Entity("LenguajesVisualesAPI.Models.Producto", b =>
                {
                    b.Navigation("DetallesPedido");
                });

            modelBuilder.Entity("LenguajesVisualesAPI.Models.Usuario", b =>
                {
                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
